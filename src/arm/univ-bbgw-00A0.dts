/*
 * Copyright 2013
 * Charles Steinkuehler <charles@steinkuehler.net>
 * Robert Nelson <robertcnelson@gmail.com>
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 */
/dts-v1/;
/plugin/;

#include "bb-cape-universal.dtsi"

/ {
	compatible = "ti,beaglebone", "ti,beaglebone-black", "ti,beaglebone-green";

	/* identification */
	part-number = "univ-bbgw";
	version = "00A0";

	/* state the resources this cape uses */
	exclusive-use =

		/* "P8.1", GND */
		/* "P8.2", GND */
		/* "P8.3", emmc */
		/* "P8.4", emmc */
		/* "P8.5", emmc */
		/* "P8.6", emmc */
		"P8.7",
		"P8.8",
		"P8.9",
		"P8.10",
		/* "P8.11", */
		/* "P8.12", */
		"P8.13",
		/* "P8.14", */
		/* "P8.15", */
		/* "P8.16", */
		/* "P8.17", */
		/* "P8.18", */
		"P8.19",
		/* "P8.20", emmc */
		/* "P8.21", emmc */
		/* "P8.22", emmc */
		/* "P8.23", emmc */
		/* "P8.24", emmc */
		/* "P8.25", emmc */
		/* "P8.26", */
		"P8.27", /* hdmi */
		"P8.28", /* hdmi */
		"P8.29", /* hdmi */
		"P8.30", /* hdmi */
		"P8.31", /* hdmi */
		"P8.32", /* hdmi */
		"P8.33", /* hdmi */
		"P8.34", /* hdmi */
		"P8.35", /* hdmi */
		"P8.36", /* hdmi */
		"P8.37", /* hdmi */
		"P8.38", /* hdmi */
		"P8.39", /* hdmi */
		"P8.40", /* hdmi */
		"P8.41", /* hdmi */
		"P8.42", /* hdmi */
		"P8.43", /* hdmi */
		"P8.44", /* hdmi */
		"P8.45", /* hdmi */
		"P8.46", /* hdmi */

		/* "P9.1", GND */
		/* "P9.2", GND */
		/* "P9.3", 3.3V */
		/* "P9.4", 3.3V */
		/* "P9.5", VDD_5V */
		/* "P9.6", VDD_5V */
		/* "P9.7", SYS_5V */
		/* "P9.8", SYS_5V */
		/* "P9.9", PWR_BUT */
		/* "P9.10", RESETn */
		"P9.11",
		/* "P9.12", bt_en */
		"P9.13",
		"P9.14",
		"P9.15",
		"P9.16",
		"P9.17",
		"P9.18",
		/* "P9.19", I2C */
		/* "P9.20", I2C */
		"P9.21",
		"P9.22",
		"P9.23",
		"P9.24",
		"P9.25", /* Audio */
		"P9.26",
		"P9.27",
		/* "P9.28", Audio */
		/* "P9.29", Audio */
		/* "P9.30", */
		/* "P9.31", Audio */
		/* "P9.32", VADC */
		/* "P9.33", AIN4 */
		/* "P9.34", AGND */
		/* "P9.35", AIN6 */
		/* "P9.36", AIN5 */
		/* "P9.37", AIN2 */
		/* "P9.38", AIN3 */
		/* "P9.39", AIN0 */
		/* "P9.40", AIN1 */
		"P9.41",
		"P9.41.1",
		"P9.42",
		"P9.42.1",
		/* "P9.43", GND */
		/* "P9.44", GND */
		/* "P9.45", GND */
		/* "P9.46", GND */

		"uart1",
		"uart2",
		"uart4",
		"uart5", /* Conflicts with HDMI */

		"ehrpwm0A",
		"ehrpwm0B",
		"ehrpwm1A",
		"ehrpwm1B",
		"ehrpwm2A",
		"ehrpwm2B",

		"epwmss0",
		"ehrpwm0",
		"ecap0",
		"epwmss1",
		"ehrpwm1",
		"epwmss2",
		"ehrpwm2",
		"ecap2",

		"i2c1",
		"spi1",
		"spi0",
		"dcan0",
		"dcan1",

		"pru0",
		"pru1",
		"pruss";

	/************************/
	/* Pin Multiplexing */
	/************************/

	fragment@1 {
		target = <&ocp>;
		__overlay__ {

			/************************/
			/* P8 Header */
			/************************/

			P8_07_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "timer";
				pinctrl-0 = <&P8_07_default_pin>;
				pinctrl-1 = <&P8_07_gpio_pin>;
				pinctrl-2 = <&P8_07_gpio_pu_pin>;
				pinctrl-3 = <&P8_07_gpio_pd_pin>;
				pinctrl-4 = <&P8_07_timer_pin>;
			};

			P8_08_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "timer";
				pinctrl-0 = <&P8_08_default_pin>;
				pinctrl-1 = <&P8_08_gpio_pin>;
				pinctrl-2 = <&P8_08_gpio_pu_pin>;
				pinctrl-3 = <&P8_08_gpio_pd_pin>;
				pinctrl-4 = <&P8_08_timer_pin>;
			};

			P8_09_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "timer";
				pinctrl-0 = <&P8_09_default_pin>;
				pinctrl-1 = <&P8_09_gpio_pin>;
				pinctrl-2 = <&P8_09_gpio_pu_pin>;
				pinctrl-3 = <&P8_09_gpio_pd_pin>;
				pinctrl-4 = <&P8_09_timer_pin>;
			};

			P8_10_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "timer";
				pinctrl-0 = <&P8_10_default_pin>;
				pinctrl-1 = <&P8_10_gpio_pin>;
				pinctrl-2 = <&P8_10_gpio_pu_pin>;
				pinctrl-3 = <&P8_10_gpio_pd_pin>;
				pinctrl-4 = <&P8_10_timer_pin>;
			};

			P8_13_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P8_13_default_pin>;
				pinctrl-1 = <&P8_13_gpio_pin>;
				pinctrl-2 = <&P8_13_gpio_pu_pin>;
				pinctrl-3 = <&P8_13_gpio_pd_pin>;
				pinctrl-4 = <&P8_13_pwm_pin>;
			};

			P8_19_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P8_19_default_pin>;
				pinctrl-1 = <&P8_19_gpio_pin>;
				pinctrl-2 = <&P8_19_gpio_pu_pin>;
				pinctrl-3 = <&P8_19_gpio_pd_pin>;
				pinctrl-4 = <&P8_19_pwm_pin>;
			};

			P8_27_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin";
				pinctrl-0 = <&P8_27_default_pin>;
				pinctrl-1 = <&P8_27_gpio_pin>;
				pinctrl-2 = <&P8_27_gpio_pu_pin>;
				pinctrl-3 = <&P8_27_gpio_pd_pin>;
				pinctrl-4 = <&P8_27_pruout_pin>;
				pinctrl-5 = <&P8_27_pruin_pin>;
			};

			P8_28_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin";
				pinctrl-0 = <&P8_28_default_pin>;
				pinctrl-1 = <&P8_28_gpio_pin>;
				pinctrl-2 = <&P8_28_gpio_pu_pin>;
				pinctrl-3 = <&P8_28_gpio_pd_pin>;
				pinctrl-4 = <&P8_28_pruout_pin>;
				pinctrl-5 = <&P8_28_pruin_pin>;
			};

			P8_29_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin";
				pinctrl-0 = <&P8_29_default_pin>;
				pinctrl-1 = <&P8_29_gpio_pin>;
				pinctrl-2 = <&P8_29_gpio_pu_pin>;
				pinctrl-3 = <&P8_29_gpio_pd_pin>;
				pinctrl-4 = <&P8_29_pruout_pin>;
				pinctrl-5 = <&P8_29_pruin_pin>;
			};

			P8_30_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin";
				pinctrl-0 = <&P8_30_default_pin>;
				pinctrl-1 = <&P8_30_gpio_pin>;
				pinctrl-2 = <&P8_30_gpio_pu_pin>;
				pinctrl-3 = <&P8_30_gpio_pd_pin>;
				pinctrl-4 = <&P8_30_pruout_pin>;
				pinctrl-5 = <&P8_30_pruin_pin>;
			};

			P8_31_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart", "qep";
				pinctrl-0 = <&P8_31_default_pin>;
				pinctrl-1 = <&P8_31_gpio_pin>;
				pinctrl-2 = <&P8_31_gpio_pu_pin>;
				pinctrl-3 = <&P8_31_gpio_pd_pin>;
				pinctrl-4 = <&P8_31_uart_pin>;
				pinctrl-5 = <&P8_31_qep_pin>;
			};

			P8_32_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep";
				pinctrl-0 = <&P8_32_default_pin>;
				pinctrl-1 = <&P8_32_gpio_pin>;
				pinctrl-2 = <&P8_32_gpio_pu_pin>;
				pinctrl-3 = <&P8_32_gpio_pd_pin>;
				pinctrl-4 = <&P8_32_qep_pin>;
			};

			P8_33_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep";
				pinctrl-0 = <&P8_33_default_pin>;
				pinctrl-1 = <&P8_33_gpio_pin>;
				pinctrl-2 = <&P8_33_gpio_pu_pin>;
				pinctrl-3 = <&P8_33_gpio_pd_pin>;
				pinctrl-4 = <&P8_33_qep_pin>;
			};

			P8_34_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd","pwm";
				pinctrl-0 = <&P8_34_default_pin>;
				pinctrl-1 = <&P8_34_gpio_pin>;
				pinctrl-2 = <&P8_34_gpio_pu_pin>;
				pinctrl-3 = <&P8_34_gpio_pd_pin>;
				pinctrl-4 = <&P8_34_pwm_pin>;
			};

			P8_35_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd","qep";
				pinctrl-0 = <&P8_35_default_pin>;
				pinctrl-1 = <&P8_35_gpio_pin>;
				pinctrl-2 = <&P8_35_gpio_pu_pin>;
				pinctrl-3 = <&P8_35_gpio_pd_pin>;
				pinctrl-4 = <&P8_35_qep_pin>;
			};

			P8_36_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd","pwm";
				pinctrl-0 = <&P8_36_default_pin>;
				pinctrl-1 = <&P8_36_gpio_pin>;
				pinctrl-2 = <&P8_36_gpio_pu_pin>;
				pinctrl-3 = <&P8_36_gpio_pd_pin>;
				pinctrl-4 = <&P8_36_pwm_pin>;
			};

			P8_37_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd","uart","pwm";
				pinctrl-0 = <&P8_37_default_pin>;
				pinctrl-1 = <&P8_37_gpio_pin>;
				pinctrl-2 = <&P8_37_gpio_pu_pin>;
				pinctrl-3 = <&P8_37_gpio_pd_pin>;
				pinctrl-4 = <&P8_37_uart_pin>;
				pinctrl-5 = <&P8_37_pwm_pin>;
			};

			P8_38_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd","uart","pwm";
				pinctrl-0 = <&P8_38_default_pin>;
				pinctrl-1 = <&P8_38_gpio_pin>;
				pinctrl-2 = <&P8_38_gpio_pu_pin>;
				pinctrl-3 = <&P8_38_gpio_pd_pin>;
				pinctrl-4 = <&P8_38_uart_pin>;
				pinctrl-5 = <&P8_38_pwm_pin>;
			};

			P8_39_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin", "qep";
				pinctrl-0 = <&P8_39_default_pin>;
				pinctrl-1 = <&P8_39_gpio_pin>;
				pinctrl-2 = <&P8_39_gpio_pu_pin>;
				pinctrl-3 = <&P8_39_gpio_pd_pin>;
				pinctrl-4 = <&P8_39_pruout_pin>;
				pinctrl-5 = <&P8_39_pruin_pin>;
				pinctrl-6 = <&P8_39_qep_pin>;
			};

			P8_40_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin", "qep";
				pinctrl-0 = <&P8_40_default_pin>;
				pinctrl-1 = <&P8_40_gpio_pin>;
				pinctrl-2 = <&P8_40_gpio_pu_pin>;
				pinctrl-3 = <&P8_40_gpio_pd_pin>;
				pinctrl-4 = <&P8_40_pruout_pin>;
				pinctrl-5 = <&P8_40_pruin_pin>;
				pinctrl-6 = <&P8_40_qep_pin>;
			};

			P8_41_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin", "qep";
				pinctrl-0 = <&P8_41_default_pin>;
				pinctrl-1 = <&P8_41_gpio_pin>;
				pinctrl-2 = <&P8_41_gpio_pu_pin>;
				pinctrl-3 = <&P8_41_gpio_pd_pin>;
				pinctrl-4 = <&P8_41_pruout_pin>;
				pinctrl-5 = <&P8_41_pruin_pin>;
				pinctrl-6 = <&P8_41_qep_pin>;
			};

			P8_42_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin", "qep";
				pinctrl-0 = <&P8_42_default_pin>;
				pinctrl-1 = <&P8_42_gpio_pin>;
				pinctrl-2 = <&P8_42_gpio_pu_pin>;
				pinctrl-3 = <&P8_42_gpio_pd_pin>;
				pinctrl-4 = <&P8_42_pruout_pin>;
				pinctrl-5 = <&P8_42_pruin_pin>;
				pinctrl-6 = <&P8_42_qep_pin>;
			};

			P8_43_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin","pwm";
				pinctrl-0 = <&P8_43_default_pin>;
				pinctrl-1 = <&P8_43_gpio_pin>;
				pinctrl-2 = <&P8_43_gpio_pu_pin>;
				pinctrl-3 = <&P8_43_gpio_pd_pin>;
				pinctrl-4 = <&P8_43_pruout_pin>;
				pinctrl-5 = <&P8_43_pruin_pin>;
				pinctrl-6 = <&P8_43_pwm_pin>;
			};

			P8_44_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin","pwm";
				pinctrl-0 = <&P8_44_default_pin>;
				pinctrl-1 = <&P8_44_gpio_pin>;
				pinctrl-2 = <&P8_44_gpio_pu_pin>;
				pinctrl-3 = <&P8_44_gpio_pd_pin>;
				pinctrl-4 = <&P8_44_pruout_pin>;
				pinctrl-5 = <&P8_44_pruin_pin>;
				pinctrl-6 = <&P8_44_pwm_pin>;
			};

			P8_45_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin","pwm";
				pinctrl-0 = <&P8_45_default_pin>;
				pinctrl-1 = <&P8_45_gpio_pin>;
				pinctrl-2 = <&P8_45_gpio_pu_pin>;
				pinctrl-3 = <&P8_45_gpio_pd_pin>;
				pinctrl-4 = <&P8_45_pruout_pin>;
				pinctrl-5 = <&P8_45_pruin_pin>;
				pinctrl-6 = <&P8_45_pwm_pin>;
			};

			P8_46_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pruout", "pruin","pwm";
				pinctrl-0 = <&P8_46_default_pin>;
				pinctrl-1 = <&P8_46_gpio_pin>;
				pinctrl-2 = <&P8_46_gpio_pu_pin>;
				pinctrl-3 = <&P8_46_gpio_pd_pin>;
				pinctrl-4 = <&P8_46_pruout_pin>;
				pinctrl-5 = <&P8_46_pruin_pin>;
				pinctrl-6 = <&P8_46_pwm_pin>;
			};

			/************************/
			/* P9 Header */
			/************************/

			P9_11_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart";
				pinctrl-0 = <&P9_11_default_pin>;
				pinctrl-1 = <&P9_11_gpio_pin>;
				pinctrl-2 = <&P9_11_gpio_pu_pin>;
				pinctrl-3 = <&P9_11_gpio_pd_pin>;
				pinctrl-4 = <&P9_11_uart_pin>;
			};

			P9_13_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart";
				pinctrl-0 = <&P9_13_default_pin>;
				pinctrl-1 = <&P9_13_gpio_pin>;
				pinctrl-2 = <&P9_13_gpio_pu_pin>;
				pinctrl-3 = <&P9_13_gpio_pd_pin>;
				pinctrl-4 = <&P9_13_uart_pin>;
			};

			P9_14_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P9_14_default_pin>;
				pinctrl-1 = <&P9_14_gpio_pin>;
				pinctrl-2 = <&P9_14_gpio_pu_pin>;
				pinctrl-3 = <&P9_14_gpio_pd_pin>;
				pinctrl-4 = <&P9_14_pwm_pin>;
			};

			P9_15_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P9_15_default_pin>;
				pinctrl-1 = <&P9_15_gpio_pin>;
				pinctrl-2 = <&P9_15_gpio_pu_pin>;
				pinctrl-3 = <&P9_15_gpio_pd_pin>;
				pinctrl-4 = <&P9_15_pwm_pin>;
			};

			P9_16_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P9_16_default_pin>;
				pinctrl-1 = <&P9_16_gpio_pin>;
				pinctrl-2 = <&P9_16_gpio_pu_pin>;
				pinctrl-3 = <&P9_16_gpio_pd_pin>;
				pinctrl-4 = <&P9_16_pwm_pin>;
			};

			P9_17_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "spi", "i2c", "pwm", "pru_uart";
				pinctrl-0 = <&P9_17_default_pin>;
				pinctrl-1 = <&P9_17_gpio_pin>;
				pinctrl-2 = <&P9_17_gpio_pu_pin>;
				pinctrl-3 = <&P9_17_gpio_pd_pin>;
				pinctrl-4 = <&P9_17_spi_pin>;
				pinctrl-5 = <&P9_17_i2c_pin>;
				pinctrl-6 = <&P9_17_pwm_pin>;
				pinctrl-7 = <&P9_17_pru_uart_pin>;
			};

			P9_18_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "spi", "i2c", "pwm", "pru_uart";
				pinctrl-0 = <&P9_18_default_pin>;
				pinctrl-1 = <&P9_18_gpio_pin>;
				pinctrl-2 = <&P9_18_gpio_pu_pin>;
				pinctrl-3 = <&P9_18_gpio_pd_pin>;
				pinctrl-4 = <&P9_18_spi_pin>;
				pinctrl-5 = <&P9_18_i2c_pin>;
				pinctrl-6 = <&P9_18_pwm_pin>;
				pinctrl-7 = <&P9_18_pru_uart_pin>;
			};

			// I2C Pins
			// P9_19_pinmux
			// P9_20_pinmux

			P9_21_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "spi", "uart", "i2c", "pwm", "pru_uart";
				pinctrl-0 = <&P9_21_default_pin>;
				pinctrl-1 = <&P9_21_gpio_pin>;
				pinctrl-2 = <&P9_21_gpio_pu_pin>;
				pinctrl-3 = <&P9_21_gpio_pd_pin>;
				pinctrl-4 = <&P9_21_spi_pin>;
				pinctrl-5 = <&P9_21_uart_pin>;
				pinctrl-6 = <&P9_21_i2c_pin>;
				pinctrl-7 = <&P9_21_pwm_pin>;
				pinctrl-8 = <&P9_21_pru_uart_pin>;
			};

			P9_22_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "spi", "uart", "i2c", "pwm", "pru_uart";
				pinctrl-0 = <&P9_22_default_pin>;
				pinctrl-1 = <&P9_22_gpio_pin>;
				pinctrl-2 = <&P9_22_gpio_pu_pin>;
				pinctrl-3 = <&P9_22_gpio_pd_pin>;
				pinctrl-4 = <&P9_22_spi_pin>;
				pinctrl-5 = <&P9_22_uart_pin>;
				pinctrl-6 = <&P9_22_i2c_pin>;
				pinctrl-7 = <&P9_22_pwm_pin>;
				pinctrl-8 = <&P9_22_pru_uart_pin>;
			};

			P9_23_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm";
				pinctrl-0 = <&P9_23_default_pin>;
				pinctrl-1 = <&P9_23_gpio_pin>;
				pinctrl-2 = <&P9_23_gpio_pu_pin>;
				pinctrl-3 = <&P9_23_gpio_pd_pin>;
				pinctrl-4 = <&P9_23_pwm_pin>;
			};

			P9_24_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart", "can", "i2c", "pru_uart", "pruin";
				pinctrl-0 = <&P9_24_default_pin>;
				pinctrl-1 = <&P9_24_gpio_pin>;
				pinctrl-2 = <&P9_24_gpio_pu_pin>;
				pinctrl-3 = <&P9_24_gpio_pd_pin>;
				pinctrl-4 = <&P9_24_uart_pin>;
				pinctrl-5 = <&P9_24_can_pin>;
				pinctrl-6 = <&P9_24_i2c_pin>;
				pinctrl-7 = <&P9_24_pru_uart_pin>;
				pinctrl-8 = <&P9_24_pruin_pin>;
			};

			P9_25_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep", "pruout", "pruin";
				pinctrl-0 = <&P9_25_default_pin>;
				pinctrl-1 = <&P9_25_gpio_pin>;
				pinctrl-2 = <&P9_25_gpio_pu_pin>;
				pinctrl-3 = <&P9_25_gpio_pd_pin>;
				pinctrl-4 = <&P9_25_qep_pin>;
				pinctrl-5 = <&P9_25_pruout_pin>;
				pinctrl-6 = <&P9_25_pruin_pin>;
			};

			P9_26_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart", "can", "i2c", "pru_uart", "pruin";
				pinctrl-0 = <&P9_26_default_pin>;
				pinctrl-1 = <&P9_26_gpio_pin>;
				pinctrl-2 = <&P9_26_gpio_pu_pin>;
				pinctrl-3 = <&P9_26_gpio_pd_pin>;
				pinctrl-4 = <&P9_26_uart_pin>;
				pinctrl-5 = <&P9_26_can_pin>;
				pinctrl-6 = <&P9_26_i2c_pin>;
				pinctrl-7 = <&P9_26_pru_uart_pin>;
				pinctrl-8 = <&P9_26_pruin_pin>;
			};

			P9_27_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep", "pruout", "pruin";
				pinctrl-0 = <&P9_27_default_pin>;
				pinctrl-1 = <&P9_27_gpio_pin>;
				pinctrl-2 = <&P9_27_gpio_pu_pin>;
				pinctrl-3 = <&P9_27_gpio_pd_pin>;
				pinctrl-4 = <&P9_27_qep_pin>;
				pinctrl-5 = <&P9_27_pruout_pin>;
				pinctrl-6 = <&P9_27_pruin_pin>;
			};

			P9_41_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "timer", "pruin";
				pinctrl-0 = <&P9_41_default_pin>;
				pinctrl-1 = <&P9_41_gpio_pin>;
				pinctrl-2 = <&P9_41_gpio_pu_pin>;
				pinctrl-3 = <&P9_41_gpio_pd_pin>;
				pinctrl-4 = <&P9_41_timer_pin>;
				pinctrl-5 = <&P9_41_pruin_pin>;
			};

			P9_91_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep", "pruout", "pruin";
				pinctrl-0 = <&P9_91_default_pin>;
				pinctrl-1 = <&P9_91_gpio_pin>;
				pinctrl-2 = <&P9_91_gpio_pu_pin>;
				pinctrl-3 = <&P9_91_gpio_pd_pin>;
				pinctrl-4 = <&P9_91_qep_pin>;
				pinctrl-5 = <&P9_91_pruout_pin>;
				pinctrl-6 = <&P9_91_pruin_pin>;
			};

			P9_42_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "pwm", "uart", "spics", "pru_ecap", "spiclk";
				pinctrl-0 = <&P9_42_default_pin>;
				pinctrl-1 = <&P9_42_gpio_pin>;
				pinctrl-2 = <&P9_42_gpio_pu_pin>;
				pinctrl-3 = <&P9_42_gpio_pd_pin>;
				pinctrl-4 = <&P9_42_pwm_pin>;
				pinctrl-5 = <&P9_42_uart_pin>;
				pinctrl-6 = <&P9_42_spics_pin>;
				pinctrl-7 = <&P9_42_pru_ecap_pin>;
				pinctrl-8 = <&P9_42_spiclk_pin>;
			};

			P9_92_pinmux {
				compatible = "bone-pinmux-helper";
				status = "okay";
				pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "qep", "pruout", "pruin";
				pinctrl-0 = <&P9_92_default_pin>;
				pinctrl-1 = <&P9_92_gpio_pin>;
				pinctrl-2 = <&P9_92_gpio_pu_pin>;
				pinctrl-3 = <&P9_92_gpio_pd_pin>;
				pinctrl-4 = <&P9_92_qep_pin>;
				pinctrl-5 = <&P9_92_pruout_pin>;
				pinctrl-6 = <&P9_92_pruin_pin>;
			};
		};
	};

	fragment@2 {
		target = <&ocp>;
		__overlay__ {
			cape-universal {
				compatible = "gpio-of-helper";
				status = "okay";
				pinctrl-names = "default";
				pinctrl-0 = <>;

				P8_07 {
					gpio-name = "P8_07";
					gpio = <&gpio2 2 0>;
					input;
					dir-changeable;
				};

				P8_08 {
					gpio-name = "P8_08";
					gpio = <&gpio2 3 0>;
					input;
					dir-changeable;
				};

				P8_09 {
					gpio-name = "P8_09";
					gpio = <&gpio2 5 0>;
					input;
					dir-changeable;
				};

				P8_10 {
					gpio-name = "P8_10";
					gpio = <&gpio2 4 0>;
					input;
					dir-changeable;
				};

				P8_13 {
					gpio-name = "P8_13";
					gpio = <&gpio0 23 0>;
					input;
					dir-changeable;
				};

				P8_19 {
					gpio-name = "P8_19";
					gpio = <&gpio0 22 0>;
					input;
					dir-changeable;
				};

				P8_27 {
					gpio-name = "P8_27";
					gpio = <&gpio2 22 0>;
					input;
					dir-changeable;
				};

				P8_28 {
					gpio-name = "P8_28";
					gpio = <&gpio2 24 0>;
					input;
					dir-changeable;
				};

				P8_29 {
					gpio-name = "P8_29";
					gpio = <&gpio2 23 0>;
					input;
					dir-changeable;
				};

				P8_30 {
					gpio-name = "P8_30";
					gpio = <&gpio2 25 0>;
					input;
					dir-changeable;
				};

				P8_31 {
					gpio-name = "P8_31";
					gpio = <&gpio0 10 0>;
					input;
					dir-changeable;
				};

				P8_32 {
					gpio-name = "P8_32";
					gpio = <&gpio0 11 0>;
					input;
					dir-changeable;
				};

				P8_33 {
					gpio-name = "P8_33";
					gpio = <&gpio0 9 0>;
					input;
					dir-changeable;
				};

				P8_34 {
					gpio-name = "P8_34";
					gpio = <&gpio2 17 0>;
					input;
					dir-changeable;
				};

				P8_35 {
					gpio-name = "P8_35";
					gpio = <&gpio0 8 0>;
					input;
					dir-changeable;
				};

				P8_36 {
					gpio-name = "P8_36";
					gpio = <&gpio2 16 0>;
					input;
					dir-changeable;
				};

				P8_37 {
					gpio-name = "P8_37";
					gpio = <&gpio2 14 0>;
					input;
					dir-changeable;
				};

				P8_38 {
					gpio-name = "P8_38";
					gpio = <&gpio2 15 0>;
					input;
					dir-changeable;
				};

				P8_39 {
					gpio-name = "P8_39";
					gpio = <&gpio2 12 0>;
					input;
					dir-changeable;
				};

				P8_40 {
					gpio-name = "P8_40";
					gpio = <&gpio2 13 0>;
					input;
					dir-changeable;
				};

				P8_41 {
					gpio-name = "P8_41";
					gpio = <&gpio2 10 0>;
					input;
					dir-changeable;
				};

				P8_42 {
					gpio-name = "P8_42";
					gpio = <&gpio2 11 0>;
					input;
					dir-changeable;
				};

				P8_43 {
					gpio-name = "P8_43";
					gpio = <&gpio2 8 0>;
					input;
					dir-changeable;
				};

				P8_44 {
					gpio-name = "P8_44";
					gpio = <&gpio2 9 0>;
					input;
					dir-changeable;
				};

				P8_45 {
					gpio-name = "P8_45";
					gpio = <&gpio2 6 0>;
					input;
					dir-changeable;
				};

				P8_46 {
					gpio-name = "P8_46";
					gpio = <&gpio2 7 0>;
					input;
					dir-changeable;
				};

				P9_11 {
					gpio-name = "P9_11";
					gpio = <&gpio0 30 0>;
					input;
					dir-changeable;
				};

				P9_13 {
					gpio-name = "P9_13";
					gpio = <&gpio0 31 0>;
					input;
					dir-changeable;
				};

				P9_14 {
					gpio-name = "P9_14";
					gpio = <&gpio1 18 0>;
					input;
					dir-changeable;
				};

				P9_15 {
					gpio-name = "P9_15";
					gpio = <&gpio1 16 0>;
					input;
					dir-changeable;
				};

				P9_16 {
					gpio-name = "P9_16";
					gpio = <&gpio1 19 0>;
					input;
					dir-changeable;
				};

				P9_17 {
					gpio-name = "P9_17";
					gpio = <&gpio0 5 0>;
					input;
					dir-changeable;
				};

				P9_18 {
					gpio-name = "P9_18";
					gpio = <&gpio0 4 0>;
					input;
					dir-changeable;
				};

				// I2C pins
				// P9_19
				// P9_20

				P9_21 {
					gpio-name = "P9_21";
					gpio = <&gpio0 3 0>;
					input;
					dir-changeable;
				};

				P9_22 {
					gpio-name = "P9_22";
					gpio = <&gpio0 2 0>;
					input;
					dir-changeable;
				};

				P9_23 {
					gpio-name = "P9_23";
					gpio = <&gpio1 17 0>;
					input;
					dir-changeable;
				};

				P9_24 {
					gpio-name = "P9_24";
					gpio = <&gpio0 15 0>;
					input;
					dir-changeable;
				};

				P9_25 {
					gpio-name = "P9_25";
					gpio = <&gpio3 21 0>;
					input;
					dir-changeable;
				};

				P9_26 {
					gpio-name = "P9_26";
					gpio = <&gpio0 14 0>;
					input;
					dir-changeable;
				};

				P9_27 {
					gpio-name = "P9_27";
					gpio = <&gpio3 19 0>;
					input;
					dir-changeable;
				};

				P9_41 {
					gpio-name = "P9_41";
					gpio = <&gpio0 20 0>;
					input;
					dir-changeable;
				};

				P9_91 {
					gpio-name = "P9_91";
					gpio = <&gpio3 20 0>;
					input;
					dir-changeable;
				};

				P9_42 {
					gpio-name = "P9_42";
					gpio = <&gpio0 7 0>;
					input;
					dir-changeable;
				};

				P9_92 {
					gpio-name = "P9_92";
					gpio = <&gpio3 18 0>;
					input;
					dir-changeable;
				};
			};
		};
	};

	/************************/
	/* UARTs */
	/************************/

	fragment@10 {
		target = <&uart1>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@11 {
		target = <&uart2>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@12 {
		target = <&uart4>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	/* UART 5 only available on LCD/HDMI pins */
	fragment@13 {
		target = <&uart5>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	/************************/
	/* Timers / PWM */
	/************************/

	fragment@20 {
		target = <&epwmss0>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@21 {
		target = <&ehrpwm0>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@22 {
		target = <&ecap0>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@23 {
		target = <&epwmss1>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@24 {
		target = <&ehrpwm1>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@25 {
		target = <&epwmss2>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@26 {
		target = <&ehrpwm2>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@27 {
		target = <&ecap2>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	/************************/
	/* I2C / SPI */
	/************************/

	fragment@30 {
		target = <&i2c1>; /* i2c1 is numbered correctly */
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>; 

			/* this is the configuration part */
			clock-frequency = <100000>;

			#address-cells = <1>;
			#size-cells = <0>;

			/* add any i2c devices on the bus here */

			// commented out example of a touchscreen (taken from BB-BONE-LCD7-01-00A4) */
			// maxtouch@4a {
			// compatible = "mXT224";
			// reg = <0x4a>;
			// interrupt-parent = <&gpio3>;
			// interrupts = <19 0x0>;
			// atmel,irq-gpio = <&gpio3 19 0>;
			// };
		};
	};

	fragment@31 {
		target = <&spi0>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;

			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>; 

			spi0channel@0 {
				#address-cells = <1>;
				#size-cells = <0>;

				compatible = "spidev";

				reg = <0>;
				spi-max-frequency = <16000000>;
				spi-cpha;
			};


			spi0channel@1 {
				#address-cells = <1>;
				#size-cells = <0>;

				compatible = "spidev";

				reg = <1>;
				spi-max-frequency = <16000000>;
			};
		};
	};

	fragment@32 {
		target = <&spi1>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>; 

			#address-cells = <1>;
			#size-cells = <0>;

			spi1channel@0 {
				#address-cells = <1>;
				#size-cells = <0>;

				compatible = "spidev";

				reg = <0>;
				spi-max-frequency = <16000000>;
				spi-cpha;
			};

			spi1channel@1 {
				#address-cells = <1>;
				#size-cells = <0>;

				compatible = "spidev";

				reg = <1>;
				spi-max-frequency = <16000000>;
			};
		};
	};

	fragment@33 {
		target = <&dcan0>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	fragment@34 {
		target = <&dcan1>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <>;
		};
	};

	/************************/
	/* PRUSS */
	/************************/

	fragment@40 {
		target-path="/";
		__overlay__ {

			ocp {
				#address-cells = <1>;
				#size-cells = <1>;

				pruss: pruss@4a300000 {
					status = "okay";
				};
			};
		};
	};

	/************************/
	/* eQEP */
	/************************/

	fragment@50 {
		target = <&eqep0>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <>;

			count_mode = <0>; /* 0 - Quadrature mode, normal 90 phase offset cha & chb. 1 - Direction mode. cha input = clock, chb input = direction */
			swap_inputs = <0>; /* Are channel A and channel B swapped? (0 - no, 1 - yes) */
			invert_qa = <1>; /* Should we invert the channel A input? */
			invert_qb = <1>; /* Should we invert the channel B input? I invert these because my encoder outputs drive transistors that pull down the pins */
			invert_qi = <0>; /* Should we invert the index input? */
			invert_qs = <0>; /* Should we invert the strobe input? */

		status = "okay";
		};
	};

	fragment@51 {
		target = <&eqep1>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <>;

			count_mode = <0>; /* 0 - Quadrature mode, normal 90 phase offset cha & chb. 1 - Direction mode. cha input = clock, chb input = direction */
			swap_inputs = <0>; /* Are channel A and channel B swapped? (0 - no, 1 - yes) */
			invert_qa = <1>; /* Should we invert the channel A input? */
			invert_qb = <1>; /* Should we invert the channel B input? I invert these because my encoder outputs drive transistors that pull down the pins */
			invert_qi = <0>; /* Should we invert the index input? */
			invert_qs = <0>; /* Should we invert the strobe input? */

		status = "okay";
		};
	};

	fragment@52 {
		target = <&eqep2>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <>;

			count_mode = <0>; /* 0 - Quadrature mode, normal 90 phase offset cha & chb. 1 - Direction mode. cha input = clock, chb input = direction */
			swap_inputs = <0>; /* Are channel A and channel B swapped? (0 - no, 1 - yes) */
			invert_qa = <1>; /* Should we invert the channel A input? */
			invert_qb = <1>; /* Should we invert the channel B input? I invert these because my encoder outputs drive transistors that pull down the pins */
			invert_qi = <0>; /* Should we invert the index input? */
			invert_qs = <0>; /* Should we invert the strobe input? */

		status = "okay";
		};
	};
};
